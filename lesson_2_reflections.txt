What happens when you initialize a repository? Why do you need to do it?
Initializing a repository will create an empty repository for the working
directory to establish a version control system for it. And that's why you need
to do it, you need to create or initialize a Git repository manually on demand.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
Staging area is much more like a temporary place for changes to be operated or
committed. It plays as the intermediate role between the working directory and
the repository and give you control about what contents from the working directory
can be version controlled into the repository.

How can you use the staging area to make sure you have one commit per logical
change?
We can use git diff command to compare the working directory and the staging
area in detail, and use git diff --staged to compare the staging area to the
repository. These comparisons can help you be clear about what changes you will
commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
Branches would be helpful to track histories of different directions. We can do
experimental things safely in new branches without affect the main or original
branch's development.

How do the diagrams help you visualize the branch structure?
Draw the branches diagram make commits of different branches clear, which helps
you understand the Git branch model.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
Merging two branches together results in combing the work of the two branches.
Using the way you do in the diagram can make branch merging clear in commits level.

What are the pros and cons of Git's automatic merging vs. always doing merges manually?
The upside is that the Git's automatic merging can eliminate many unnecessary
manually merging work, which can facilitate the collaborative workflow;
the downside is the man initiates the merge may not capture or notice the changes being merged.
